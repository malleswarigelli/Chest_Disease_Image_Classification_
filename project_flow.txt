
Project name: Chest disease classification from CT Scan Image 

- Image classification with Tensorflow
- Build neural network (ANN, CNN)

flow
1. project introduction
2. create project template
3. project setup (create, activate virtual environment, requirements.txt installation)
4. logging, exception, utility
5. project workflow ...
6. All components notebook Experiment --> 1. data ingestion (read image data from google drive), CNN extracts features directly (validation, transformation not needed),
                                          2. prepare base model (import pretrained ensemble model for Imagenet dataset: vgg16), finetune and customize for our chest data
                                          3. model training, 
                                          4. model evaluation add MLFlow (metrics: accuracy, losses), 
                                          5. model pusher (since model.h5 size is small, pushed to github)
7. All components modular coding implementation
8. pipelines: training, prediction
9. MLOPs tools: mlflow (experiment tracking, model registration),
                DVC: Data version control (for pipeline tracking), since DL project with images, training is computationally expensive, pipeline tracking helps 
10. User app i.e App.py (Flask, web application framework)
11. Docker 
12. CI/CD deployment using Jenkins


# secrets

### Mlflow dagshub connection uri (get this from dagshub.com repository experiment )
MLFLOW_TRACKING_URI=https://dagshub.com/malleswarigelli/Chest_Disease_Image_Classification_.mlflow \
MLFLOW_TRACKING_USERNAME=malleswarigelli \
MLFLOW_TRACKING_PASSWORD==2285aa424e395caab6840e555b7d9680a386cde7

# RUN from bash terminal

```bash

export MLFLOW_TRACKING_URI=https://dagshub.com/malleswarigelli/Chest_Disease_Image_Classification_.mlflow
export MLFLOW_TRACKING_USERNAME=malleswarigelli
export MLFLOW_TRACKING_PASSWORD=2285aa424e395caab6840e555b7d9680a386cde7